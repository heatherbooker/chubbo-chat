import surveyApi from './surveyApi.js';


export default {

  SURVEY_URL_ROOT: 'https://chubbo-chat.herokuapp.com/#!/surveys/',

  handlePublishing: function(user, title, questions) {
    var promise = new Promise((resolve, reject) => {
      if (this.isValidData(title, questions)) {
        var timestamp = Date.now();
        this.publish(user, title, questions, timestamp)
            .then((surveyId) => {
              var surveyUrl = this.SURVEY_URL_ROOT + user.uid + '/' + surveyId;
              resolve({id: surveyId, timestamp, url: surveyUrl});
            });
      }
    });
    return promise;
  },
  isValidData: function(title, questions) {
    if (!title) {
      return false;
    } else {
      return true;
    }
    // We don't have any validity checks for the questions
  },
  setLocalSurvey: function(title, questions, isForPublishing) {
    // isForPublishing will be true if user clicked 'Publish' button;
    // else, they just logged in while in the middle of creating a survey.
    var surveyObject = {
      id: '$creating_survey',
      isPublished: false,
      title,
      questions,
      isForPublishing
    };
    window.sessionStorage.setItem('cc-userSurvey', JSON.stringify(surveyObject));
  },
  addQuotes: function(questions) {
    // Adding quotes to make it valid json for sending to database
    return questions.map(function(question) {
      return `"${question}"`;
    });
  },
  removeBlankQuestions: function(questions) {
    var filteredQuestions = questions;
    // unless there's only one question,
    if (questions.length > 1) {
      // remove blank questions
      filteredQuestions = questions.filter(function(question) {
        return question !== '';
      });
    }
    return filteredQuestions;
  },
  publish: function(user, title, questions, timestamp) {
    var promise = new Promise((resolve, reject) => {
      if (user) {
        var finalQuestions = this.addQuotes(this.removeBlankQuestions(questions));
        this.addSurveyToDatabase(title, finalQuestions, timestamp)
            .then((surveyId) => {
              if (surveyId) {
                resolve(surveyId);
              }
            });
      }
    });
    return promise;
  },
  addSurveyToDatabase: function(title, finalQuestions, timestamp) {
    return surveyApi.publishSurvey(`{
      "title": "${title}",
      "questions": [${finalQuestions}],
      "timestamp": ${timestamp}
    }`)
        .then((response) => {
          if (response.ok) {
            return response.json()
              .then((responseData) => {
                // 'responseData.name' is the ID generated by surveyApi.
                return responseData.name;
              })
          } else {
            console.log('error: ', response.statusText);
            return false;
          }
        });
  }
};
